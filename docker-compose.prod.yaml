x-backend-app: &backend-app
  build:
    context: backend
    dockerfile: Dockerfile
  volumes:
    - ./backend/app:/app
    - ./backend/migration:/migration
    - ./cookies:/cookies:rw
  env_file:
    - .env
  restart: unless-stopped
  environment:
    - DATABASE__HOST=db
    - PARSER__PROXY=socks5://proxy:8080

x-frontend-app: &frontend-app
  build:
    context: frontend
    dockerfile: Dockerfile
  env_file:
    - .env
  volumes:
    - ./frontend:/app


services:
  build-frontend:
    <<: *frontend-app
    command: npm run build

  backend:
    <<: *backend-app
    command: python -m uvicorn app.web:app --host 0.0.0.0 --port 8000 --workers 1
    expose:
      - "8000"
    depends_on:
      - db

  scheduler:
    <<: *backend-app
    command: python -m app.scheduler
    depends_on:
      - db

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE__USER}
      - POSTGRES_PASSWORD=${DATABASE__PASSWORD}
      - POSTGRES_DB=${DATABASE__DB}
      - POSTGRES_PORT=${DATABASE__PORT}
    expose:
      - "${DATABASE__PORT}"
    volumes:
      - ./db:/var/lib/postgresql/data


  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped



  proxy:
    image: mitmproxy/mitmproxy
    command: mitmdump --mode socks5 --listen-host 0.0.0.0 --listen-port 8080 --set block_global=false --set ssl_insecure=true
    restart: unless-stopped
    volumes:
      - ./.mitmproxy:/home/mitmproxy/.mitmproxy
    expose:
      - 8080


volumes:
  caddy_data:
  caddy_config: 