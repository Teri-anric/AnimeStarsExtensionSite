x-backend-app: &backend-app
  build:
    context: backend
    dockerfile: Dockerfile
  volumes:
    - ./backend:/app
  env_file:
    - .env
  environment:
    - DATABASE__HOST=db

x-frontend-app: &frontend-app
  build:
    context: frontend
    dockerfile: Dockerfile
  env_file:
    - .env
  volumes:
    - ./frontend:/app


services:
  frontend:
    <<: *frontend-app
    command: npm run dev -- --port 3000 --host
    restart: unless-stopped
    expose:
      - "3000"


  backend:
    <<: *backend-app
    command: python -m uvicorn app.web:app --host 0.0.0.0 --port 8000 --reload
    expose:
      - "8000"
    depends_on:
      - db

  scheduler:
    <<: *backend-app
    command: python -m app.scheduler
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE__USER}
      - POSTGRES_PASSWORD=${DATABASE__PASSWORD}
      - POSTGRES_DB=${DATABASE__DB}
      - POSTGRES_PORT=${DATABASE__PORT}
    expose:
      - "${DATABASE__PORT}"
    volumes:
      - ./db:/var/lib/postgresql/data

    nginx:
      build:
        context: nginx
        dockerfile: Dockerfile
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - backend
        - frontend

  proxy:
    image: mitmproxy/mitmproxy
    command: mitmdump --mode socks5 --listen-host 0.0.0.0 --listen-port 8080 --set block_global=false --set ssl_insecure=true
    restart: unless-stopped
    volumes:
      - ./.mitmproxy:/home/mitmproxy/.mitmproxy
    expose:
      - 8080
    networks:
      - animestars-network