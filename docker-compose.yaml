x-backend-app: &backend-app
  build:
    context: backend
    dockerfile: Dockerfile
  volumes:
    - ./backend/app:/app
    - ./backend/migration:/migration
  env_file:
    - .env
  environment:
    - DATABASE__HOST=db

x-frontend-app: &frontend-app
  build:
    context: frontend
    dockerfile: Dockerfile
  env_file:
    - .env
  volumes:
    - ./frontend:/app


services:
  frontend:
    <<: *frontend-app
    command: npm run dev -- --port 3000 --host
    restart: unless-stopped
    ports:
      - "3000:3000"


  backend:
    <<: *backend-app
    command: python -m uvicorn app.web:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE__USER}
      - POSTGRES_PASSWORD=${DATABASE__PASSWORD}
      - POSTGRES_DB=${DATABASE__DB}
      - POSTGRES_PORT=${DATABASE__PORT}
    expose:
      - "${DATABASE__PORT}"
    volumes:
      - ./db:/var/lib/postgresql/data

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/dev-default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/entrypoint.sh:/usr/local/bin/entrypoint.sh
    depends_on:
      - backend
      - frontend
