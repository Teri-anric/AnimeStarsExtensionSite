import asyncio
from datetime import datetime, UTC

from app.database.connection import get_async_session
from app.parser.services import VerificationService
from app.database.repos import VerificationCodeRepository
from app.config import settings


async def example_with_repository():
    """–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—î–º."""
    username = "Teri"
    
    print("=== –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—î–º ===")
    print(f"–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:")
    print(f"  - Cookie —Ñ–∞–π–ª: {settings.pm.cookie_file}")
    print(f"  - –õ–æ–≥—ñ–Ω: {settings.pm.login}")
    print(f"  - –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –∫–æ–¥—É: {settings.pm.code_expire_hours} –≥–æ–¥–∏–Ω–∏")
    print()
    
    async with get_async_session() as session:
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –Ω–∞–ø—Ä—è–º—É
        repo = VerificationCodeRepository(session)
        
        # 1. –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = await repo.get_stats()
        print(f"üìä –ü–æ—Ç–æ—á–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        # 2. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–æ–¥—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤—ñ—Å
        print("\n2. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–æ–¥—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó...")
        verification_service = VerificationService(session)
        code = await verification_service.create_and_send_code(username)
        print(f"‚úÖ –ö–æ–¥ {code} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {username}")
        
        # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
        print("\n3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π...")
        verification_code = await repo.get_valid_code(username, code)
        if verification_code:
            print(f"‚úÖ –ö–æ–¥ –∑–Ω–∞–π–¥–µ–Ω–æ: {verification_code.code}")
            print(f"   –°—Ç–≤–æ—Ä–µ–Ω–æ: {verification_code.created_at}")
            print(f"   –î—ñ–π—Å–Ω–∏–π –¥–æ: {verification_code.expire_at}")
            print(f"   –í–∞–ª—ñ–¥–Ω–∏–π: {verification_code.is_valid}")
        else:
            print("‚ùå –ö–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ –≤–∞–ª—ñ–¥–Ω–∏–π")
        
        # 4. –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤—ñ—Å
        print("\n4. –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∫–æ–¥—É...")
        is_valid = await verification_service.verify_code(username, code)
        if is_valid:
            print(f"‚úÖ –ö–æ–¥ {code} —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!")
        else:
            print(f"‚ùå –ö–æ–¥ {code} –Ω–µ–≤—ñ—Ä–Ω–∏–π –∞–±–æ –∑–∞—Å—Ç–∞—Ä—ñ–≤")
        
        # 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        print("\n5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è...")
        verification_code_after = await repo.get_valid_code(username, code)
        if verification_code_after:
            print(f"‚ö†Ô∏è  –ö–æ–¥ –≤—Å–µ —â–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π (–Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏)")
        else:
            print(f"‚úÖ –ö–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–Ω–∞—á–µ–Ω–∏–π —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π")
        
        # 6. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–¥—ñ–≤ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        print("\n6. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–¥—ñ–≤...")
        active_codes = await repo.get_active_by_username(username)
        print(f"üìã –ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–¥—ñ–≤ –¥–ª—è {username}: {len(active_codes)}")
        for code_obj in active_codes:
            print(f"   - {code_obj.code} (—Å—Ç–≤–æ—Ä–µ–Ω–æ: {code_obj.created_at})")
        
        # 7. –û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n7. –û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...")
        updated_stats = await repo.get_stats()
        print(f"üìä –û–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {updated_stats}")


async def example_direct_repository_usage():
    """–ü—Ä–∏–∫–ª–∞–¥ –ø—Ä—è–º–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é."""
    print("\n=== –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä—è–º–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é ===")
    
    async with get_async_session() as session:
        repo = VerificationCodeRepository(session)
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–¥—É –≤—Ä—É—á–Ω—É
        username = "TestUser"
        code = "123456"
        expire_at = datetime.now(UTC).replace(tzinfo=None)
        
        print(f"1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–¥—É –¥–ª—è {username}...")
        verification_code = await repo.create(username, code, expire_at)
        print(f"‚úÖ –ö–æ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {verification_code.id}")
        
        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–¥—É
        print(f"2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–¥—É...")
        found_code = await repo.get_by_username_and_code(username, code)
        if found_code:
            print(f"‚úÖ –ö–æ–¥ –∑–Ω–∞–π–¥–µ–Ω–æ: {found_code.code}")
        else:
            print("‚ùå –ö–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π
        print(f"3. –ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π...")
        await repo.mark_as_used(str(verification_code.id))
        print("‚úÖ –ö–æ–¥ –ø–æ–∑–Ω–∞—á–µ–Ω–∏–π —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ
        print(f"4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ...")
        valid_code = await repo.get_valid_code(username, code)
        if valid_code:
            print("‚ö†Ô∏è  –ö–æ–¥ –≤—Å–µ —â–µ –≤–∞–ª—ñ–¥–Ω–∏–π (–Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏)")
        else:
            print("‚úÖ –ö–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–Ω–∞—á–µ–Ω–∏–π —è–∫ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π")


async def example_cleanup_operations():
    """–ü—Ä–∏–∫–ª–∞–¥ –æ–ø–µ—Ä–∞—Ü—ñ–π –æ—á–∏—â–µ–Ω–Ω—è."""
    print("\n=== –ü—Ä–∏–∫–ª–∞–¥ –æ–ø–µ—Ä–∞—Ü—ñ–π –æ—á–∏—â–µ–Ω–Ω—è ===")
    
    async with get_async_session() as session:
        verification_service = VerificationService(session)
        
        # –î–µ–∞–∫—Ç–∏–≤–∞—Ü—ñ—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∫–æ–¥—ñ–≤
        print("1. –î–µ–∞–∫—Ç–∏–≤–∞—Ü—ñ—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∫–æ–¥—ñ–≤...")
        await verification_service.cleanup_expired_codes()
        print("‚úÖ –ó–∞—Å—Ç–∞—Ä—ñ–ª—ñ –∫–æ–¥–∏ –¥–µ–∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ")
        
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∫–æ–¥—ñ–≤
        print("2. –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∫–æ–¥—ñ–≤...")
        await verification_service.delete_expired_codes()
        print("‚úÖ –ó–∞—Å—Ç–∞—Ä—ñ–ª—ñ –∫–æ–¥–∏ –≤–∏–¥–∞–ª–µ–Ω–æ")
        
        # –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∫–æ–¥—ñ–≤
        print("3. –û—á–∏—â–µ–Ω–Ω—è –∫–æ–¥—ñ–≤ —Å—Ç–∞—Ä—ñ—à–µ 7 –¥–Ω—ñ–≤...")
        await verification_service.cleanup_old_codes(7)
        print("‚úÖ –°—Ç–∞—Ä—ñ –∫–æ–¥–∏ –≤–∏–¥–∞–ª–µ–Ω–æ")
        
        # –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("4. –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...")
        stats = await verification_service.get_stats()
        print(f"üìä –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö –ø—Ä–∏–∫–ª–∞–¥—ñ–≤
    asyncio.run(example_with_repository())
    asyncio.run(example_direct_repository_usage())
    asyncio.run(example_cleanup_operations())